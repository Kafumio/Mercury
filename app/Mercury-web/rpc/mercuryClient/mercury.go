// Code generated by goctl. DO NOT EDIT.
// Source: Mercury.proto

package mercuryClient

import (
	"context"

	"Mercury/app/Mercury-web/rpc/mercury"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BatchSendRequest = mercury.BatchSendRequest
	MessageParam     = mercury.MessageParam
	SendRequest      = mercury.SendRequest
	SendResponse     = mercury.SendResponse

	Mercury interface {
		Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error)
		BatchSend(ctx context.Context, in *BatchSendRequest, opts ...grpc.CallOption) (*SendResponse, error)
	}

	defaultMercury struct {
		cli zrpc.Client
	}
)

func NewMercury(cli zrpc.Client) Mercury {
	return &defaultMercury{
		cli: cli,
	}
}

func (m *defaultMercury) Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error) {
	client := mercury.NewMercuryClient(m.cli.Conn())
	return client.Send(ctx, in, opts...)
}

func (m *defaultMercury) BatchSend(ctx context.Context, in *BatchSendRequest, opts ...grpc.CallOption) (*SendResponse, error) {
	client := mercury.NewMercuryClient(m.cli.Conn())
	return client.BatchSend(ctx, in, opts...)
}
